#!/usr/bin/env ruby
require 'optparse'
require 'open-uri'
require 'base64'
require 'public_suffix'

options = {}
OptionParser.new do |opts|
  opts.banner = 'Usage: gfwlist2ipset [options]'

  options[:ipset] = 'outwall'
  options[:output] = 'gfwlist.conf'

  opts.on('', '--ipset <ipset name>', 'Specify ipset name, default: outwall') do |value|
    options[:ipset] = value
  end

  opts.on('-o OUTPUT', '--output OUTPUT', 'Output file, default: gfwlist.conf') do |value|
    options[:output] = value
  end

  opts.on('-d <DNS Server>', '--dns <DNS Server>', 'Specify DNS Server') do |value|
    options[:dns] = value
  end
end.parse!

gfwlist_url = 'https://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt'
extra_domains = [
  'admob.com',
  'akamaihd.net',
  'amazonaws.com',
  'appledaily.com.hk',
  'appledaily.com.tw',
  'bbc.com',
  'blogspot.com',
  'fastly.net',
  'githubusercontent.com',
  'google-analytics.com',
  'google.as',
  'google.co.jp',
  'google.co.id',
  'google.co.th',
  'google.co.uk',
  'google.com',
  'google.com.hk',
  'google.com.tw',
  'googlesyndication.com',
  's3.feedly.com',
  'cloudfront.net',
  'ace-cdn.atlassian.com',
  'wufoo.com',
  'nextmedia.com',
  'cxense.com',
  'krxd.net',
  'chartbeat.net',
  'slack-files.com',
  'slack-redir.net',
  'fbinfer.com',
  'line.naver.jp',
  'packages.gitlab.com'
]

def get_hostname(rule)
  host = URI.parse(rule).host
  if PublicSuffix.valid?(host)
    return PublicSuffix.parse(host).domain
  elsif PublicSuffix.valid?('.' + host)
    tld = PublicSuffix.parse('.' + host).tld
    return tld if tld.include?('.') && tld == host
  else
    puts 'Hostname not valid: ' + host
  end
  return nil
rescue
  puts 'can not parse rule as url: ' + rule
  return nil
end

enc = open(gfwlist_url).read
plain = Base64.decode64(enc)

domains = []
plain.each_line do |line|
  if line.include? '.*'
    next
  elsif line.include? '*'
    line = line.gsub('*', '/')
  end
  if line.start_with? '||'
    line = line.sub('||', '')
  elsif line.start_with? '|'
    line = line.sub('|', '')
  elsif line.start_with? '.'
    line = line.sub('.', '')
  end
  next if line.start_with?('!') || line.start_with?('[') || line.start_with?('@')
  line.chomp!
  if line.length > 0
    line = 'http://' + line unless line.start_with? 'http'
    hostname = get_hostname(line)
    domains.push(hostname) if hostname
  end
end

domains.concat extra_domains
File.open(options[:output], 'w+') do |f|
  f.puts '# Generated by gfwlist2ipset at ' + Time.new.inspect
  if options.key?(:dns)
    domains.sort.uniq.each do |domain|
      f.puts('server=/' + domain + '/' + options[:dns])
      f.puts('ipset=/' + domain + '/' + options[:ipset])
    end
  else
    domains.sort.uniq.each do |domain|
      f.puts('ipset=/' + domain + '/' + options[:ipset])
    end
  end
end
